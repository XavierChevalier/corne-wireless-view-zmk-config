/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include "keymap_french.h"
#include "helper.h"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Up {
            bindings = <&kp UP_ARROW>;
            key-positions = <20 31>;
            layers = <0>;
        };

        Down {
            bindings = <&kp DOWN_ARROW>;
            key-positions = <20 33>;
            layers = <0>;
        };

        Left {
            bindings = <&kp LEFT_ARROW>;
            key-positions = <31 32>;
            layers = <0>;
        };

        Right {
            bindings = <&kp RIGHT_ARROW>;
            key-positions = <32 33>;
            layers = <0>;
        };

        PageUp {
            bindings = <&kp PAGE_UP>;
            key-positions = <19 20>;
            layers = <0>;
        };

        PageDown {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <20 21>;
            layers = <0>;
        };

        AtSymbol {
            bindings = <&kp FR_AT>;
            key-positions = <18 30>;
            layers = <0>;
        };

        EHighAccent {
            bindings = <&kp FR_E_ACUTE>;
            key-positions = <14 3>;
            layers = <0>;
        };

        EGraveAccent {
            bindings = <&kp FR_E_GRAVE>;
            key-positions = <3 16>;
            layers = <0>;
        };

        MediaLayer {
            bindings = <&mo 3>;
            key-positions = <38 39>;
        };

        NumLayer {
            bindings = <&sl 2>;
            key-positions = <18 19>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U           &kp I      &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J           &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M           &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &kp LEFT_SHIFT  &kp RALT
            >;
        };

        lower_layer {
            label = "Lower";
            bindings = <
&kp FR_SQUARE   &kp FR_MICRO       &kp FR_A_GRAVE  &kp FR_C_CEDILLA  &kp FR_E_GRAVE  &kp FR_E_ACUTE    &none      &kp FR_N7  &kp FR_N8  &kp FR_N9  &none  &trans
&kp FR_U_GRAVE  &kp FR_EURO        &none           &kp FR_LBRC       &kp FR_PIPE     &kp FR_RBRC       &none      &kp FR_N4  &kp FR_N5  &kp FR_N6  &none  &none
&kp FR_TILDE    &kp FR_POUND_SIGN  &kp FR_CURREN   &kp FR_SECT       &kp FR_UMLAUT   &kp FR_DEG        &kp FR_N0  &kp FR_N1  &kp FR_N2  &kp FR_N3  &none  &trans
                                                   &trans            &trans          &trans            &trans     &trans     &trans
            >;
        };

        num_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "Num";
        };

        media_layer {
            label = "Media";
            bindings = <
&trans          &trans        &trans        &trans        &trans        &trans          &trans            &trans          &trans      &trans             &trans           &trans
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_NEXT  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_MUTE
&kp LEFT_SHIFT  &trans        &trans        &trans        &trans        &trans          &trans            &trans          &trans      &trans             &trans           &trans
                                            &trans        &trans        &trans          &trans            &trans          &trans
            >;
        };
    };
};
