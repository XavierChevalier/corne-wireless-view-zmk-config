/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "keymap_french.h"
#include "helper.h"
#include "french_unicode.dtsi"

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            label = "Lower";
            bindings = <
&kp ESCAPE  &none  &kp HOME        &kp UP_ARROW    &kp END          &kp PAGE_UP      &none            &kp FR_7  &kp FR_8  &kp FR_9  &none  &trans
&kp TAB     &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN    &none            &kp FR_5  &kp FR_6  &none     &none
&kp LSHFT   &none  &none           &none           &none            &none            &kp FR_0         &kp FR_1  &kp FR_2  &kp FR_3  &none  &trans
                                   &kp LGUI        &trans           &kp SPACE        &kp RET          &trans           &kp RALT
            >;
        };

        raise_layer {
            label = "Raise";
            bindings = <
&trans  &kp LS(NUMBER_1)  &kp LS(N2)  &kp HASH  &kp DLLR  &kp PRCNT    &kp RS(CARET)  &kp AMPERSAND  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &none             &none       &none     &none     &none        &kp MINUS      &kp EQUAL      &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &none             &none       &none     &none     &none        &kp UNDER      &kp PLUS       &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                      &kp LGUI  &trans    &kp SPACE    &kp RET        &trans         &kp RALT
            >;
        };

        hardware_layer {
            bindings = <
&trans          &trans        &trans        &trans        &trans        &trans          &trans            &trans          &trans      &trans             &trans           &trans
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_NEXT  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_MUTE
&kp LEFT_SHIFT  &trans        &trans        &trans        &trans        &trans          &trans            &trans          &trans      &trans             &trans           &trans
                                            &trans        &trans        &trans          &trans            &trans          &trans
            >;

            label = "Hardware";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Bluetooth {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
